The evaluation function is implemented in MaxConnect4Game.py.
The class has a method named "countScoreForEval()"" which implements Alpha Beta MinMax Minmax Algorithm and evaluates the best possible move for players using the algorithm.

The algorithm works with following inputs :
State (generate successor game state taking current game state)
Alpha (best value for max player or 1st Player)
Beta (best value for min player or 2 player) and Depth(expanding a node to a given level)

The algorithm begins expanding the candidates and maintains a list that holds the possible columns for making a move. This is carried out till the provided depth limit and once this is reached the expansion is stopped. Adding an alpha and beta value helps prun the search for the algorithm down the nodes where it is guaranted to not find a minimum value or a maximum value for the min player and the max player, respectively.


Functions used:
minmaxDecision(), minVal() , maxVal() and candidate().

Evaluation function for depth limited search: countScoreForEval()

This function calculates the utility value when the depth specified by the user is reached.
1) assigns a value based on the current game state
2)for ever connecting 4, it increments the value by 1
3)Evaluation function assigns a value based on the state of the game. For every four  occurrences horizontally (1111), vertically and diagonally it increases the value by 1.
4)Similarly, for every three occurences vertically and horizontally (111), it increases the value by 0.75 and returns a sum of all these values obtained.
The evaluation function then takes the sum all the values and returns this values.
